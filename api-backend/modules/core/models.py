from django.contrib.postgres.search import SearchVectorField
from django.db import models


class Country(models.Model):
    name = models.CharField(max_length=32, blank=True, null=True)

    class Meta:
        # managed = False
        db_table = "country"

    def __str__(self):
        return self.name


class LectionManager(models.Manager):
    def get_queryset(self):
        return (
            super()
            .get_queryset()
            .filter(content_ru__isnull=False, date__isnull=False, country__isnull=False)
        )


class Lection(models.Model):
    # Fields generated by inspect_db
    title = models.CharField(max_length=255, blank=True, null=True)
    city = models.CharField(max_length=32, blank=True, null=True)
    country = models.ForeignKey(Country, models.DO_NOTHING, blank=True, null=True)
    content_ru = models.TextField(blank=True, null=True)
    content_en = models.TextField(blank=True, null=True)
    date = models.DateField(blank=True, null=True)
    is_public_program = models.BooleanField()
    has_video = models.BooleanField()
    has_audio = models.BooleanField()
    is_unknown_source = models.BooleanField()  # Not used
    note = models.CharField(max_length=255, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    tsvector_ru = SearchVectorField(
        blank=True, null=True
    )  # This field type is a guess.

    # Migration fields
    is_lection = models.BooleanField(default=True)
    is_verified = models.BooleanField(default=False)

    objects = LectionManager()

    class Meta:
        # managed = False
        db_table = "lection"
